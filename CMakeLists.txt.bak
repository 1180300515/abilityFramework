cmake_minimum_required(VERSION 3.0)
project(AbilityFramework VERSION 0.1)

set(CMAKE_CXX_COMPILER "/usr/bin/clang++-14")
set(CMAKE_CXX_FLAGS "-std=c++17 -O3")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set(YAML_DIR /opt/homebrew/Cellar/yaml-cpp/0.7.0)
set(YAML_INCLUDE_DIR  ${YAML_DIR}/include/yaml-cpp)
set(YAML_LIB_DIR ${YAML_DIR}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/modules)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

include_directories(${CMAKE_SOURCE_DIR}/include {YAML_INCLUDE_DIR})
find_package(yaml-cpp REQUIRED)

add_library(Module_A SHARED ${CMAKE_SOURCE_DIR}/src/plugincore/pluginload.cpp)
set_target_properties(Module_A PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/modules)
target_include_directories(Module_A PUBLIC ${CMAKE_SOURCE_DIR}/include/plugincore)
target_link_libraries(Module_A yaml-cpp)

add_library(ability_mgr SHARED ${CMAKE_SOURCE_DIR}/src/abilitymanager/abimanager.cpp)
set_target_properties(ability_mgr PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/modules)
target_include_directories(ability_mgr PUBLIC ${CMAKE_SOURCE_DIR}/include/abilitymanager)
target_link_libraries(ability_mgr)

add_library(connection_mgr SHARED ${CMAKE_SOURCE_DIR}/src/connmanager/connmanager.cpp)

set_target_properties(connection_mgr PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib/modules)
target_include_directories(connection_mgr PUBLIC ${CMAKE_SOURCE_DIR}/include/connmanager)

target_link_libraries(connection_mgr)


add_executable(${PROJECT_NAME} src/main.cpp src/plugincore/pluginload.cpp src/eventhandler/eventhandler.cpp)
target_link_libraries(AbilityFramework yaml-cpp)