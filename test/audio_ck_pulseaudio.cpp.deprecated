#include <iostream>
#include <pulse/pulseaudio.h>

static void sink_info_callback(pa_context *c, const pa_sink_info *info, int eol, void *userdata) {
    if (eol > 0) return;

    std::cout << "Output device (Speaker): " << info->description << std::endl;
    std::cout << "  Name: " << info->name << std::endl;
    std::cout << "  Volume: " << pa_cvolume_avg(&(info->volume)) << std::endl;
    std::cout << "  Muted: " << (info->mute ? "Yes" : "No") << std::endl;
    std::cout << "  Sample rate: " << info->sample_spec.rate << " Hz" << std::endl;
    std::cout << "  Channels: " << info->sample_spec.channels << std::endl;
}

static void source_info_callback(pa_context *c, const pa_source_info *info, int eol, void *userdata) {
    if (eol > 0) return;

    std::cout << "Input device (Microphone): " << info->description << std::endl;
    std::cout << "  Name: " << info->name << std::endl;
    std::cout << "  Volume: " << pa_cvolume_avg(&(info->volume)) << std::endl;
    std::cout << "  Muted: " << (info->mute ? "Yes" : "No") << std::endl;
    std::cout << "  Sample rate: " << info->sample_spec.rate << " Hz" << std::endl;
    std::cout << "  Channels: " << info->sample_spec.channels << std::endl;
}

static void context_state_callback(pa_context *c, void *userdata) {
    if (pa_context_get_state(c) == PA_CONTEXT_READY) {
        pa_operation *o;

        o = pa_context_get_sink_info_list(c, sink_info_callback, nullptr);
        if (o) {
            pa_operation_unref(o);
        }

        o = pa_context_get_source_info_list(c, source_info_callback, nullptr);
        if (o) {
            pa_operation_unref(o);
        }
    }
}

int main() {
    pa_mainloop *mainloop = pa_mainloop_new();
    pa_mainloop_api *mainloop_api = pa_mainloop_get_api(mainloop);
    pa_context *context = pa_context_new(mainloop_api, "Device Details");

    pa_context_set_state_callback(context, context_state_callback, nullptr);
    pa_context_connect(context, nullptr, PA_CONTEXT_NOFLAGS, nullptr);

    pa_mainloop_run(mainloop, nullptr);

    pa_context_disconnect(context);
    pa_context_unref(context);
    pa_mainloop_free(mainloop);

    return 0;
}
